/*
Owner - Kozlova Kseniia
Cube Name - OF classes ops
ID - B0F5866011EB4A90619C0080EF851C99
*/

select *

from (
/*
Owner - Kozlova Kseniia
Cube Name - Weekly_V2
ID -
*/

/*
Owner - Ekaterina Nesterova
Cube Name - Delivery Performance - UPD
ID - A049E02A11EB08E358E50080EFC56510
*/

with all_orders AS (
SELECT fo.date_key AS dates,
       fo.hour_key,
       jo.journey_id,
       loc.city_name AS city,
       ct.lob_desc AS lob_desc,
       ct.class_type_desc AS class_type,
       fo.gt_order_gk AS order_gk,
       -- driver_gk = 200013 i a CC user, all his orders should be marked AS cancelled
       CASE when fo.driver_gk = 200013 THEN 4 ELSE order_status_key end AS order_status_key,
       order_cancellation_stage_key,
       fo.is_went_to_cc_key AS went_to_cc,
       (CASE when v.vendor_name like '%courier car%' THEN 'PHV'
            when v.vendor_name like '%courier pedestrian%' THEN 'pedestrian'
            when v.vendor_name like '%courier scooter%' THEN 'scooter'
            ELSE 'taxi'
       end) AS supply_type,
       (CASE when ct.class_family = 'Premium' THEN 'NF' ELSE 'OF' end) AS platform,
       fo.ordering_corporate_account_gk AS company_gk,
       ca.corporate_account_name AS company_name,
       am.name AS account_manager,
       del_ftp_date_key,
       (CASE when ct.class_type_desc like '%c2c%' THEN 3 ELSE
       (CASE when am.name like '%Delivery%' THEN 1 ELSE 2 end) end) AS Client_type_key,
 (CASE when ct.class_type_desc like '%c2c%' THEN 'C2C' ELSE
       (CASE when am.name like '%Delivery%' THEN 'eCommerce' ELSE 'Corporate' end) end) AS Client_type_desc,
      case when ct.class_family = 'Premium' then total_customer_amount_exc_vat*1.2 else fo.customer_total_cost_inc_vat end AS customer_total_cost_inc_vat,
     case when ct.class_family = 'Premium' then total_customer_amount_exc_vat else fo.customer_total_cost end AS customer_total_cost ,
      fo.driver_total_cost_inc_vat AS driver_total_cost_inc_vat ,
      fo.driver_total_cost AS driver_total_cost ,
      fo.driver_total_commission_exc_vat AS driver_total_commission_exc_vat,
     (CASE
            WHEN lob_desc = 'Deliveries - B2B'
            THEN
            (case when ct.class_family = 'Premium'
                 then total_customer_amount_exc_vat - driver_total_cost_inc_vat
                 else customer_total_cost - driver_total_cost_inc_vat end)
            ELSE (CASE
                      WHEN customer_total_cost_inc_vat - driver_total_cost_inc_vat >0
                      THEN round((customer_total_cost_inc_vat - driver_total_cost_inc_vat)/1.2,2)
                      ELSE customer_total_cost_inc_vat - driver_total_cost_inc_vat
                  END)
        END) AS buy_sell,
sum(CASE when ct.class_family IN ('Premium') and (ct.class_type_desc not like '%ondemand%' or fo.ordering_corporate_account_gk = 200025342) then jo.completed_deliveries
when ct.class_family IN ('Premium') and ct.class_type_desc like '%ondemand%' and fo.ordering_corporate_account_gk <> 200025342 THEN jo.picked_up_deliveries ELSE 0 end) AS paid_deliveries_NF,
sum(CASE when ct.class_family IN ('Premium') THEN jo.completed_deliveries ELSE 0 end) AS completed_deliveries_NF,
sum(CASE when ct.class_family IN ('Premium') THEN jo.picked_up_deliveries ELSE 0 end) AS picked_up_deliveries_NF,
sum(CASE when ct.class_family IN ('Premium') THEN jo.gross_deliveries ELSE 0 end) AS gross_deliveries_NF
FROM "emilia_gettdwh"."dwh_fact_orders_v" fo
LEFT JOIN (
                        SELECT
                            j.order_gk, j.journey_id,
                            j.total_customer_amount_exc_vat,
                            COUNT(CASE WHEN d.delivery_status_id = 4 AND j.courier_gk <> 200013 THEN d.delivery_gk END) AS completed_deliveries, -- j.courier_gk = 200013 is a CC user that is used to cancel orders, all his orders should be marked AS cancelled
                            COUNT(CASE WHEN d.delivery_status_id IN (4,7) AND j.courier_gk <> 200013 THEN d.delivery_gk END) AS picked_up_deliveries, -- j.courier_gk = 200013 is a CC user that is used to cancel orders, all his orders should be marked AS cancelled
                            COUNT(d.delivery_gk) AS gross_deliveries
                        FROM model_delivery.dwh_fact_journeys_v AS j
                        LEFT JOIN model_delivery.dwh_fact_deliveries_v AS d ON d.journey_gk = j.journey_gk
                        WHERE 1 = 1
                            AND j.country_symbol = 'RU'
                            AND d.delivery_type_id <> 2 -- Returns
                            AND d.company_gk NOT IN (20001999) -- Test company
                            AND j.date_key BETWEEN date'2019-01-01' AND CURRENT_DATE
                        GROUP BY 1,2,3 ) AS jo ON jo.order_gk=fo.order_gk
LEFT JOIN emilia_gettdwh.dwh_dim_class_types_v AS ct
  ON ct.class_type_key = fo.class_type_key
LEFT JOIN emilia_gettdwh.dwh_dim_corporate_accounts_v AS ca
  ON ca.corporate_account_gk = fo.ordering_corporate_account_gk
LEFT JOIN  emilia_gettdwh.dwh_dim_account_managers_v am ON am."account_manager_gk" = ca."account_manager_gk"
LEFT JOIN emilia_gettdwh.dwh_dim_locations_v AS loc
  ON loc.location_key = fo.origin_location_key
LEFT JOIN "emilia_gettdwh"."dwh_dim_drivers_v" d ON d.driver_gk = fo.driver_gk
LEFT JOIN emilia_gettdwh.dwh_dim_vendors_v AS v ON v.vendor_gk = d.fleet_gk
WHERE fo.country_key=2
  AND ct.lob_key IN (5,6)
  AND ct.class_group NOT LIKE 'Test'
  and ordering_corporate_account_gk not IN ( 20004730, 200017459, 20001999) --dummy delivery user and test company
  AND fo.date_key BETWEEN date'2019-01-01' AND (CURRENT_DATE - interval '1' day)
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  )

SELECT dates,
       tp.timecategory,
       tp.subperiod,
       tp.period,
       tp.subperiod2 AS time_period,
       city,
       journey_id,
       all_orders.platform,
       lob_desc,
       class_type,
       client_type_key,
       client_type_desc,
       all_orders.company_gk,
       company_name,
       account_manager,
       del_ftp_date_key,
       order_gk,
       supply_type,
       order_status_key,
       CASE when lob_desc = 'Deliveries - B2C' THEN 'C2C'
       when lob_desc = 'Deliveries - B2B' and name_internal is null THEN 'others' ELSE name_internal end AS company_name_united,
       CASE when lob_desc = 'Deliveries - B2C' THEN 'C2C'
       when lob_desc = 'Deliveries - B2B' and segment is null THEN 'other' ELSE segment end AS Segment,
       went_to_cc,
      sum(CASE when platform = 'OF'  and (order_status_key = 7 or (order_status_key=4 and "order_cancellation_stage_key" = 3)) THEN 1
         when platform = 'NF' THEN paid_deliveries_NF end) AS paid_deliveries,
       sum(CASE when platform = 'OF' and (order_status_key = 7 or (order_status_key=4 and "order_cancellation_stage_key" = 3)) THEN 1
         when platform = 'NF' THEN picked_up_deliveries_NF end) AS picked_up_deliveries,
           sum(CASE when platform = 'OF' THEN 1
         when platform = 'NF' THEN gross_deliveries_NF end) AS gross_deliveries,
       sum(customer_total_cost_inc_vat) AS customer_total_cost_inc_vat,
       sum(customer_total_cost) AS customer_total_cost,
       sum(driver_total_cost_inc_vat) AS driver_total_cost_inc_vat,
       sum(driver_total_cost) AS driver_total_cost,
       sum(buy_sell) AS buy_sell,
       sum(case when buy_sell < 0 then buy_sell end) AS negative_buy_sell,
       sum(case when buy_sell >= 0 then buy_sell end) as positive_buy_sell,
       sum(case when buy_sell >= 0 then buy_sell end) - sum(driver_total_commission_exc_vat) as finance_take_rate,
       sum(driver_total_commission_exc_vat)*(-1) AS driver_total_commission_exc_vat
       FROM all_orders
       LEFT JOIN sheets."default".delivery_corp_accounts_20191203 AS accounts ON cast(accounts.company_gk AS bigint)=all_orders.company_gk
       LEFT JOIN data_vis.periods_v AS tp ON tp.date_key = all_orders.dates and tp.hour_key = all_orders.hour_key
        WHERE timecategory IN ('2.Dates', '3.Weeks', '4.Months', '5.Quarters', '7.Std Hours')
       GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22
)
where
timecategory like '2.Dates'
and dates >= date'2021-05-01'
and (company_gk in (200025576,200022121,200025540))
;

/*
Owner - Ekaterina Nesterova
Cube Name - Delivery Performance - UPD
ID - A049E02A11EB08E358E50080EFC56510
*/
select time_period,
sum(paid_deliveries)

from (

with all_orders AS (
SELECT fo.date_key AS dates,
       fo.hour_key,
       loc.city_name AS city,
       ct.lob_desc AS lob_desc,
       ct.class_type_desc AS class_type,
       fo.gt_order_gk AS order_gk,
       -- driver_gk = 200013 i a CC user, all his orders should be marked AS cancelled
       CASE when fo.driver_gk = 200013 THEN 4 ELSE order_status_key end AS order_status_key,
       order_cancellation_stage_key,
       fo.is_went_to_cc_key AS went_to_cc,
       (CASE when v.vendor_name like '%courier car%' THEN 'PHV'
            when v.vendor_name like '%courier pedestrian%' THEN 'pedestrian'
            when v.vendor_name like '%courier scooter%' THEN 'scooter'
            ELSE 'taxi'
       end) AS supply_type,
       (CASE when ct.class_family = 'Premium' THEN 'NF' ELSE 'OF' end) AS platform,
       fo.ordering_corporate_account_gk AS company_gk,
       ca.corporate_account_name AS company_name,
       am.name AS account_manager,
       del_ftp_date_key,
       (CASE when ct.class_type_desc like '%c2c%' THEN 3 ELSE
       (CASE when am.name like '%Delivery%' THEN 1 ELSE 2 end) end) AS Client_type_key,
 (CASE when ct.class_type_desc like '%c2c%' THEN 'C2C' ELSE
       (CASE when am.name like '%Delivery%' THEN 'eCommerce' ELSE 'Corporate' end) end) AS Client_type_desc,

    (case when jo.order_gk is not null then total_customer_amount_exc_vat*1.2 else fo.customer_total_cost_inc_vat end) AS customer_total_cost_inc_vat,
    (case when jo.order_gk is not null then total_customer_amount_exc_vat else fo.customer_total_cost end) AS customer_total_cost

      fo.driver_total_cost_inc_vat AS driver_total_cost_inc_vat ,
      fo.driver_total_cost AS driver_total_cost ,
      fo.driver_total_commission_exc_vat AS driver_total_commission_exc_vat,
     (CASE
            WHEN lob_desc = 'Deliveries - B2B'
            THEN (case when jo.order_gk is not null then total_customer_amount_exc_vat else fo.customer_total_cost end) - driver_total_cost_inc_vat
            ELSE (CASE
                      WHEN customer_total_cost_inc_vat - driver_total_cost_inc_vat >0
                      THEN round((customer_total_cost_inc_vat - driver_total_cost_inc_vat)/1.2,2)
                      ELSE customer_total_cost_inc_vat - driver_total_cost_inc_vat
                  END)
        END) AS buy_sell,
sum(CASE when ct.class_family IN ('Premium') and ct.class_type_desc not like '%ondemand% ' then jo.completed_deliveries
when ct.class_family IN ('Premium') and ct.class_type_desc like '%ondemand%' THEN jo.picked_up_deliveries ELSE 0 end) AS paid_deliveries_NF,
sum(CASE when ct.class_family IN ('Premium') THEN jo.completed_deliveries ELSE 0 end) AS completed_deliveries_NF,
sum(CASE when ct.class_family IN ('Premium') THEN jo.picked_up_deliveries ELSE 0 end) AS picked_up_deliveries_NF,
sum(CASE when ct.class_family IN ('Premium') THEN jo.gross_deliveries ELSE 0 end) AS gross_deliveries_NF

FROM "emilia_gettdwh"."dwh_fact_orders_v" fo
LEFT JOIN (
        SELECT
            j.order_gk,
            j.total_customer_amount_exc_vat,
            COUNT(CASE WHEN d.delivery_status_id = 4 AND j.courier_gk <> 200013 THEN d.delivery_gk END) AS completed_deliveries, -- j.courier_gk = 200013 is a CC user that is used to cancel orders, all his orders should be marked AS cancelled
            COUNT(CASE WHEN d.delivery_status_id IN (4,7) AND j.courier_gk <> 200013 THEN d.delivery_gk END) AS picked_up_deliveries, -- j.courier_gk = 200013 is a CC user that is used to cancel orders, all his orders should be marked AS cancelled
            COUNT(d.delivery_gk) AS gross_deliveries
            FROM model_delivery.dwh_fact_journeys_v AS j
            LEFT JOIN model_delivery.dwh_fact_deliveries_v AS d ON d.journey_gk = j.journey_gk
            WHERE 1 = 1
            AND j.country_symbol = 'RU'
            AND d.delivery_type_id <> 2 -- Returns
            AND d.company_gk NOT IN (20001999) -- Test company
            AND j.date_key BETWEEN date'2019-01-01' AND CURRENT_DATE

        GROUP BY 1,2 ) AS jo ON jo.order_gk=fo.order_gk

LEFT JOIN emilia_gettdwh.dwh_dim_class_types_v AS ct
  ON ct.class_type_key = fo.class_type_key
LEFT JOIN emilia_gettdwh.dwh_dim_corporate_accounts_v AS ca
  ON ca.corporate_account_gk = fo.ordering_corporate_account_gk
LEFT JOIN  emilia_gettdwh.dwh_dim_account_managers_v am ON am."account_manager_gk" = ca."account_manager_gk"
LEFT JOIN emilia_gettdwh.dwh_dim_locations_v AS loc
  ON loc.location_key = fo.origin_location_key
LEFT JOIN "emilia_gettdwh"."dwh_dim_drivers_v" d ON d.driver_gk = fo.driver_gk
LEFT JOIN emilia_gettdwh.dwh_dim_vendors_v AS v ON v.vendor_gk = d.fleet_gk
WHERE fo.country_key=2
  AND ct.lob_key IN (5,6)
  AND ct.class_group NOT LIKE 'Test'
  and ordering_corporate_account_gk not IN ( 20004730, 200017459, 20001999) --dummy delivery user and test company
  AND fo.date_key BETWEEN date'2019-01-01' AND (CURRENT_DATE - interval '1' day)
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22
  )

SELECT dates,
       tp.timecategory,
       tp.subperiod,
       tp.period,
       tp.subperiod2 AS time_period,
       city,
       all_orders.platform,
       lob_desc,
       class_type,
       client_type_key,
       client_type_desc,
       all_orders.company_gk,
       company_name,
       account_manager,
       del_ftp_date_key,
       supply_type,
       order_status_key,
       CASE when lob_desc = 'Deliveries - B2C' THEN 'C2C'
       when lob_desc = 'Deliveries - B2B' and name_internal is null THEN 'others' ELSE name_internal end AS company_name_united,
       CASE when lob_desc = 'Deliveries - B2C' THEN 'C2C'
       when lob_desc = 'Deliveries - B2B' and segment is null THEN 'other' ELSE segment end AS Segment,
       went_to_cc,
      sum(CASE when platform = 'OF'  and (order_status_key = 7 or (order_status_key=4 and "order_cancellation_stage_key" = 3)) THEN 1
         when platform = 'NF' THEN paid_deliveries_NF end) AS paid_deliveries,
       sum(CASE when platform = 'OF' and (order_status_key = 7 or (order_status_key=4 and "order_cancellation_stage_key" = 3)) THEN 1
         when platform = 'NF' THEN picked_up_deliveries_NF end) AS picked_up_deliveries,
           sum(CASE when platform = 'OF' THEN 1
         when platform = 'NF' THEN gross_deliveries_NF end) AS gross_deliveries,
       sum(customer_total_cost_inc_vat) AS customer_total_cost_inc_vat,
       sum(customer_total_cost) AS customer_total_cost,
       sum(driver_total_cost_inc_vat) AS driver_total_cost_inc_vat,
       sum(driver_total_cost) AS driver_total_cost,
       sum(buy_sell) AS buy_sell,
       sum(driver_total_commission_exc_vat)*(-1) AS driver_total_commission_exc_vat
       FROM all_orders
       LEFT JOIN sheets."default".delivery_corp_accounts_20191203 AS accounts ON cast(accounts.company_gk AS bigint)=all_orders.company_gk
       LEFT JOIN data_vis.periods_v AS tp ON tp.date_key = all_orders.dates and tp.hour_key = all_orders.hour_key
        WHERE timecategory IN ('2.Dates', '3.Weeks', '4.Months', '5.Quarters', '7.Std Hours')
       GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20

))
where time_period like '%W09%'
group by 1




-- console delete
select json_extract(json_extract(json_extract(json_extract(from_utf8('{"created_at":"2021-06-01T04:44:42.198+00:00","env":"RU","event_name":"charging|calculation","id":4655724800,"odr":{"actual_stop_points":null,"actual_stop_points_from_dbx_enabled":false,"actual_stop_points_reference_adjustment_radius":500,"arrived_at":null,"breaks_duration_seconds":0,"cancellation_state":null,"cancelled_at":null,"commitment":{"customer":{"base_fare_commitment":{"end_point_validity_radius":500,"metadata":{"amount_exc_tax":429,"amount_inc_deviation":false,"amount_inc_tax":429,"destination":{"full_address":"Россия, Московская область, городской округ Мытищи, посёлок Вёшки, Зелёный бульвар, 30","latitude":"55.9290500","longitude":"37.6027000"},"estimate_base_price":330,"estimation_data":{"distance_km":6.9,"duration_min":16,"exact_distance_km":6.9,"exact_duration_min":15.2333333333333,"overview_polyline_points":"oeitIsh{dFkEdCJz@QL{AbAiBfAsBbAyGpC}C|AgDnBgAt@aBbAiEdCUMA?Ma@AUDKDKHKhAu@rEsCZOREJ?LFRZTpAFn@?ZIh@QZ_@VkDbBkGzCMBUEKWCMBUHe@tAi@p@Y|BmAzDeChAq@xAaAtCgBfAg@j@nKPfD^fH?p@Kb@EHc@j@qGnH_J~JwDnEeDrD{@|@QLs@FqCES@SNETCh@QbK@lAz@vItB`Th@xFPdC\\jKl@tPh@vQ\\bM@hEL|U@tGCpAMtBm@zH~@tC|AdG`CdKxAxGfAdEjB~G`@xArAvDRl@d@rBl@dDp@pEFt@XfDX~ExAdTPzAr@nCgDnAeBv@_@\\e@t@o@pA{@rAe@d@i@R_@Dm@A_@K[Oa@_@]k@Q_@]kA[wA"},"main_base_fare_area":{},"origin":{"full_address":"Московская область, городской округ Мытищи, деревня Бородино, Осташковское шоссе, 59","latitude":"55.9217230","longitude":"37.6644710"},"original_minimum":0,"taxes":{"amount_for_taxes":429,"includes_tax":false}},"price":429,"sub_component_results":[{"amount":39,"explanation":[{"bindings":{"amount":"i18n.components.tiered_pricing.explanation.free","from":"0.0","to":"3.0","unit":"i18n.unit.kilometer"},"key":"components.tiered_pricing.explanation.first_segment"},{"bindings":{"amount":"39.00","from":"3.0","to":"6.9","unit":"i18n.unit.kilometer"},"key":"components.tiered_pricing.explanation.segment"}],"metadata":{"all_segments":[{"max_value":3,"min_value":0,"price_per_unit":0},{"max_value":-1,"min_value":3,"price_per_unit":10}],"amount_exc_tax":39,"amount_inc_tax":39,"grace_value":0,"segments":[{"amount":0,"units":3},{"amount":39,"units":3.9}],"taxes":{"amount_for_taxes":39,"includes_tax":false},"unit":"kilometer"},"name":"tiered_pricing","status":"calculated","sub_component_results":null},{"amount":60,"explanation":[{"bindings":{"amount":"i18n.components.tiered_pricing.explanation.free","from":"0.0","to":"10.0","unit":"i18n.unit.minute"},"key":"components.tiered_pricing.explanation.first_segment"},{"bindings":{"amount":"60.00","from":"10.0","to":"16.0","unit":"i18n.unit.minute"},"key":"components.tiered_pricing.explanation.segment"}],"metadata":{"all_segments":[{"max_value":10,"min_value":0,"price_per_unit":0},{"max_value":-1,"min_value":10,"price_per_unit":10}],"amount_exc_tax":60,"amount_inc_tax":60,"grace_value":0,"segments":[{"amount":0,"units":10},{"amount":60,"units":6}],"taxes":{"amount_for_taxes":60,"includes_tax":false},"unit":"minute"},"name":"tiered_pricing","status":"calculated","sub_component_results":null}]}},"supplier":null},"company":{"id":25633,"name":"ООО \"Городской супермаркет\" - доставка NF"},"created_at":"2021-06-01T04:38:09Z","customer":{"id":4514914,"name":"3AC7EF07A99E2942BC0A61C6573839639602E4E55ED456F37E18F7FE33934985","properties":{"delivery_order_type":"supplier"},"user":{"id":4606792,"uuid":"e0021e50556c0134604322000a5e8f70"}},"customer_surge":{},"destination":{"full_address":"Россия, Московская область, городской округ Мытищи, посёлок Вёшки, Зелёный бульвар, 30","latitude":55.92905,"longitude":37.6027},"division_canonical_id":"2661","driver_id":408212,"driving_distance_meters":null,"drop_off":null,"ended_at":null,"env":"RU","estimation":null,"experiment":null,"extras":null,"features":{"tolls":true},"fixed_charge_disabled":false,"no_show":false,"order_id":1702894703,"order_status":"confirmed","order_type":"business","order_uuid":"1747a6a0a4c10139406022af62277568","origin":{"full_address":"Московская область, городской округ Мытищи, деревня Бородино, Осташковское шоссе, 59","latitude":55.921723,"longitude":37.664471},"overrides":null,"payment_type":"voucher","polyline":null,"price_estimation_uuid":null,"reference_stop_points":null,"scheduled_at":"2021-06-01T04:38:09Z","settings":{"use_snapshots":null},"started_at":"2021-06-01T04:44:40Z","street_hail":false,"supplier":{"fleet":{"conditional_tax":false,"sales_tax":false},"id":408212,"properties":{"car_type":"custom10","fleet_company":"14202company25633","taxi_station":14202}},"supplier_boost":{},"supplier_surge":{},"taxi_meter":412.52,"tips":0,"vendor_cancellation_fee":0,"vendor_generic_parameters":null,"vendor_tax_amount":null,"will_arrive_at":"2021-06-01T04:44:40Z"},"order_id":1702894703,"price_estimation_uuid":null,"pricing":{"customer":{"concept_name":"Fixed Price only","contract":{"id":519870,"name":"Default"},"flow":"main","mode":{"id":714534,"name":"copy of (copy of (copy of (customer routes) at 11/08/2020 07:34) at 23/11/2020 07:39) at 23/11/2020 07:40","price_type":"none"},"price_models":[{"components":[{"apply_surge":false,"markups":[],"name":"driving","sub_component":{"allow_cap_on_base_fare":null,"apply_surge":false,"commitment_required":true,"commitment_respected":true,"discount_on_cash":true,"drop_off_ignored":true,"estimate_base_price":330,"estimate_distance_with_osrm":false,"estimate_minimum_distance":0,"estimate_tiered_pricing_by_distance":{"apply_surge":false,"data":{"grace_value":0,"segments":[{"max":3,"price_per_unit":"0.0"},{"max":-1,"price_per_unit":"10.0"}]},"markups":[],"name":"tiered_pricing"},"estimate_tiered_pricing_by_duration":{"apply_surge":false,"data":{"grace_value":"0.0","segments":[{"max":10,"price_per_unit":"0.0"},{"max":-1,"price_per_unit":"10.0"}]},"markups":[],"name":"tiered_pricing"},"estimate_with_traffic":true,"fixed_price_by_estimate":true,"fixed_price_list_id":2181515,"main_base_fare_area":null,"markups":[],"minimum_amount":0,"name":"fixed_price","not_available_for_payment_types":[],"stop_points_calculation_concept":"use_basefare_for_the_entire_route","surge_cap_amount":null}},{"apply_surge":false,"cancellation_source_policy":"own","free_waiting_time_per_stop":"8.0","from_airport_tiered_pricing":{"apply_surge":false,"data":{"grace_value":"0.0","segments":[{"max":10,"price_per_unit":"0.0"},{"max":-1,"price_per_unit":"10.0"}]},"markups":[],"name":"tiered_pricing"},"main_tiered_pricing":{"apply_surge":false,"data":{"grace_value":"0.0","segments":[{"max":10,"price_per_unit":"0.0"},{"max":-1,"price_per_unit":"10.0"}]},"markups":[],"name":"tiered_pricing"},"markups":[],"name":"waiting"},{"apply_surge":false,"drop_off_ignored":true,"estimate_base_price_by_areas":[],"estimate_base_price_per_point":330,"estimate_distance_with_osrm":false,"estimate_tiered_pricing_by_distance":{"apply_surge":false,"data":{"grace_value":0,"segments":[{"max":-1,"price_per_unit":"0.0"}]},"markups":[],"name":"tiered_pricing"},"estimate_tiered_pricing_by_duration":{"apply_surge":false,"data":{"grace_value":"0.0","segments":[{"max":-1,"price_per_unit":"0.0"}]},"markups":[],"name":"tiered_pricing"},"markups":[],"name":"stop_points","need_customer_payment":false,"stop_points_calculation_concept":"use_basefare_for_the_entire_route"},{"apply_surge":false,"markups":[],"name":"tolls","timeslots":[],"use_destination_for_fixed_price":true},{"applies_to":[],"apply_surge":false,"markups":[],"name":"surge"},{"applies_to":["driving"],"applies_to_extras":[],"apply_surge":false,"customer_tip":null,"enabled":true,"markups":[],"name":"tips","supplier_share":null}],"name":"price_model"}],"service_class":{"id":2661,"name":"moscow delivery daas ondemand nf av op"},"settings":{"distance_units":"kilometer","granularity_precision":0.1,"unit_granularity":"ceiling"},"taxes":{"conditional_tax":null,"managed_with_tax":false,"sales_tax":{"applies_to":["driving","waiting","additional_fee","tolls","extras","stop_points","tips","cancellation","surge"],"rate":20,"state_of_origin":null,"tax_authority":null},"taxable_extras":[]}},"supplier":{"concept_name":"External Meter only","contract":{"id":518914,"name":"Default"},"flow":"main","mode":{"id":713190,"name":"copy of (copy of (copy of (supplier ondemand routes) at 11/08/2020 07:34) at 23/11/2020 07:39) at 23/11/2020 07:40","price_type":"none"},"price_models":[{"components":[{"apply_surge":false,"markups":[],"name":"driving","sub_component":{"apply_surge":false,"discount_on_cash":true,"estimation_enabled":true,"markups":[],"minimum_topup_with_surge_for_customer":false,"name":"external_meter"}},{"applies_to":[],"applies_to_extras":[],"apply_surge":false,"customer_tip":"excluding_tax","enabled":false,"markups":[],"name":"tips","supplier_share":100},{"applies_to":[],"apply_surge":false,"markups":[],"name":"surge"}],"name":"price_model"}],"service_class":{"id":2661,"name":"moscow delivery daas ondemand nf av op"},"settings":{"distance_units":"kilometer","granularity_precision":1,"unit_granularity":"ceiling"},"taxes":{"conditional_tax":null,"managed_with_tax":true,"sales_tax":{"applies_to":["driving","waiting","additional_fee","tolls","extras","stop_points","tips","cancellation","surge"],"disabled":true,"disabled_reason":"disabled for fleet","rate":20,"state_of_origin":null,"tax_authority":null},"taxable_extras":[]}}},"result":{"currency_conversion_rates":{"customer":null},"customer":{"amount":429,"amount_exc_tax":429,"amount_inc_tax":514.8,"calculations":[{"price_model_component_result":{"amount":429,"explanation":[],"metadata":{"amount_exc_tax":429,"amount_inc_tax":514.8,"taxes":{"conditional_tax_amount":0,"sales_tax_amount":85.8}},"name":"price_model","status":"calculated","sub_component_results":[{"amount":429,"explanation":[],"metadata":{"amount_exc_tax":429,"amount_inc_tax":514.8,"taxes":{"amount_for_taxes":429,"includes_tax":false,"sales_tax_amount":85.8}},"name":"driving","status":"calculated","sub_component_results":[{"amount":429,"explanation":[{"bindings":{"from":"Московская область, городской округ Мытищи, деревня Бородино, Осташковское шоссе, 59","to":"Россия, Московская область, городской округ Мытищи, посёлок Вёшки, Зелёный бульвар, 30"},"key":"components.fixed_price.explanation.fixed_price_for_drop_off_from_commitment"}],"metadata":{"amount_exc_tax":429,"amount_inc_deviation":false,"amount_inc_tax":429,"destination":{"full_address":"Россия, Московская область, городской округ Мытищи, посёлок Вёшки, Зелёный бульвар, 30","latitude":"55.9290500","longitude":"37.6027000"},"estimate_base_price":330,"estimation_data":{"distance_km":6.9,"duration_min":16,"exact_distance_km":6.9,"exact_duration_min":15.2333333333333,"overview_polyline_points":"oeitIsh{dFkEdCJz@QL{AbAiBfAsBbAyGpC}C|AgDnBgAt@aBbAiEdCUMA?Ma@AUDKDKHKhAu@rEsCZOREJ?LFRZTpAFn@?ZIh@QZ_@VkDbBkGzCMBUEKWCMBUHe@tAi@p@Y|BmAzDeChAq@xAaAtCgBfAg@j@nKPfD^fH?p@Kb@EHc@j@qGnH_J~JwDnEeDrD{@|@QLs@FqCES@SNETCh@QbK@lAz@vItB`Th@xFPdC\\jKl@tPh@vQ\\bM@hEL|U@tGCpAMtBm@zH~@tC|AdG`CdKxAxGfAdEjB~G`@xArAvDRl@d@rBl@dDp@pEFt@XfDX~ExAdTPzAr@nCgDnAeBv@_@\\e@t@o@pA{@rAe@d@i@R_@Dm@A_@K[Oa@_@]k@Q_@]kA[wA"},"from_commitment":true,"main_base_fare_area":{},"origin":{"full_address":"Московская область, городской округ Мытищи, деревня Бородино, Осташковское шоссе, 59","latitude":"55.9217230","longitude":"37.6644710"},"original_minimum":0,"taxes":{"amount_for_taxes":429,"includes_tax":false}},"name":"fixed_price","status":"calculated","sub_component_results":[{"amount":39,"explanation":[{"bindings":{"amount":"i18n.components.tiered_pricing.explanation.free","from":"0.0","to":"3.0","unit":"i18n.unit.kilometer"},"key":"components.tiered_pricing.explanation.first_segment"},{"bindings":{"amount":"39.00","from":"3.0","to":"6.9","unit":"i18n.unit.kilometer"},"key":"components.tiered_pricing.explanation.segment"}],"metadata":{"all_segments":[{"max_value":3,"min_value":0,"price_per_unit":0},{"max_value":-1,"min_value":3,"price_per_unit":10}],"amount_exc_tax":39,"amount_inc_tax":39,"grace_value":0,"segments":[{"amount":0,"units":3},{"amount":39,"units":3.9}],"taxes":{"amount_for_taxes":39,"includes_tax":false},"unit":"kilometer"},"name":"tiered_pricing","status":"calculated","sub_component_results":[]},{"amount":60,"explanation":[{"bindings":{"amount":"i18n.components.tiered_pricing.explanation.free","from":"0.0","to":"10.0","unit":"i18n.unit.minute"},"key":"components.tiered_pricing.explanation.first_segment"},{"bindings":{"amount":"60.00","from":"10.0","to":"16.0","unit":"i18n.unit.minute"},"key":"components.tiered_pricing.explanation.segment"}],"metadata":{"all_segments":[{"max_value":10,"min_value":0,"price_per_unit":0},{"max_value":-1,"min_value":10,"price_per_unit":10}],"amount_exc_tax":60,"amount_inc_tax":60,"grace_value":0,"segments":[{"amount":0,"units":10},{"amount":60,"units":6}],"taxes":{"amount_for_taxes":60,"includes_tax":false},"unit":"minute"},"name":"tiered_pricing","status":"calculated","sub_component_results":[]}]}]},{"amount":0,"explanation":[{"bindings":{"initial_time":"0.0","stop_points_time":"0.0","total_time":"0.0"},"key":"components.waiting.explanation.basic.provided_by_vendor"}],"metadata":{"amount_exc_tax":0,"amount_inc_tax":0,"exact_priced_time":0,"free_time":0,"initial_time":0,"paid_time":0,"priced_time":0,"stop_points":[],"taxes":{"amount_for_taxes":0,"includes_tax":false,"sales_tax_amount":0},"total_time":0},"name":"waiting","status":"calculated","sub_component_results":[{"amount":0,"explanation":[],"metadata":{"all_segments":[{"max_value":10,"min_value":0,"price_per_unit":0},{"max_value":-1,"min_value":10,"price_per_unit":10}],"amount_exc_tax":0,"amount_inc_tax":0,"grace_value":0,"taxes":{"amount_for_taxes":0,"includes_tax":false},"unit":"minute"},"name":"tiered_pricing","status":"calculated","sub_component_results":[]}]},{"amount":0,"explanation":[{"bindings":{},"key":"components.stop_points.explanation.no_points"}],"metadata":{"actual_stop_points":[],"amount_exc_tax":0,"amount_inc_tax":0,"reference_stop_points":[],"stop_points":[],"taxes":{"amount_for_taxes":0,"includes_tax":false,"sales_tax_amount":0}},"name":"stop_points","status":"calculated","sub_component_results":[]},{"amount":0,"explanation":[{"bindings":{"amount":0,"cost_change_value":null,"tolls_count":0},"key":"components.tolls.explanation.basic"}],"metadata":{"amount_exc_tax":0,"amount_inc_tax":0,"cost_change_value":null,"taxes":{"amount_for_taxes":0,"includes_tax":false,"sales_tax_amount":0},"tolls":[]},"name":"tolls","status":"calculated","sub_component_results":[]},{"amount":0,"explanation":[],"metadata":{"amount_exc_tax":0,"amount_inc_tax":0,"taxes":{"amount_for_taxes":0,"includes_tax":false,"sales_tax_amount":0}},"name":"surge","status":"calculated","sub_component_results":[]},{"amount":0,"explanation":[{"bindings":{"tippable_amount":"429.00","tips_percent":"0.0"},"key":"components.tips.explanation.basic"}],"metadata":{"amount_exc_tax":0,"amount_inc_tax":0,"applies_to":["driving"],"cost_for_tips":429,"cost_for_tips_exc_tax":429,"cost_for_tips_inc_tax":514.8,"taxes":{"amount_for_taxes":0,"includes_tax":false,"sales_tax_amount":0},"tips_percent":0},"name":"tips","status":"calculated","sub_component_results":[]}]}}],"concept_name":"Fixed Price only","mode_name":"copy of (copy of (copy of (customer routes) at 11/08/2020 07:34) at 23/11/2020 07:39) at 23/11/2020 07:40","mode_type":"none","service_class":{"id":2661,"name":"moscow delivery daas ondemand nf av op"},"status":"calculated","taxes":{"conditional_tax":{"applies_to":[],"disabled":false,"disabled_reason":null,"full_rate":0,"rate":0},"managed_with_tax":false,"sales_tax":{"applies_to":["driving","waiting","additional_fee","tolls","extras","stop_points","tips","cancellation","surge"],"disabled":false,"disabled_reason":null,"full_rate":20,"rate":20},"taxable_extras":[]}},"supplier":{"amount":412.52,"amount_exc_tax":412.52,"amount_inc_tax":412.52,"calculations":[{"price_model_component_result":{"amount":412.52,"explanation":[],"metadata":{"amount_exc_tax":412.52,"amount_inc_tax":412.52,"taxes":{"balance":{"amount":0},"conditional_tax_amount":0,"sales_tax_amount":0}},"name":"price_model","status":"calculated","sub_component_results":[{"amount":412.52,"explanation":[],"metadata":{"amount_exc_tax":412.52,"amount_inc_tax":412.52,"taxes":{"amount_for_taxes":412.52,"includes_tax":true,"sales_tax_amount":0}},"name":"driving","status":"calculated","sub_component_results":[{"amount":412.52,"explanation":[],"metadata":{"amount_exc_tax":412.52,"amount_inc_tax":412.52,"original_minimum":0,"taxes":{"amount_for_taxes":412.52,"includes_tax":true}},"name":"external_meter","status":"calculated","sub_component_results":[]}]},{"amount":0,"explanation":[{"bindings":{"customer_tips_amount":0,"gett_tips_amount":0,"supplier_share":100},"key":"components.tips.explanation.supplier_share_from_tips_without_tax"}],"metadata":{"amount_exc_tax":0,"amount_inc_tax":0,"customer_tips_amount":0,"customer_tips_include_tax":false,"gett_tips_amount":0,"supplier_share_percent":100,"taxes":{"amount_for_taxes":0,"includes_tax":true,"sales_tax_amount":0}},"name":"tips","status":"calculated","sub_component_results":[]},{"amount":0,"explanation":[],"metadata":{"amount_exc_tax":0,"amount_inc_tax":0,"taxes":{"amount_for_taxes":0,"includes_tax":true,"sales_tax_amount":0}},"name":"surge","status":"calculated","sub_component_results":[]}]}}],"concept_name":"External Meter only","mode_name":"copy of (copy of (copy of (supplier ondemand routes) at 11/08/2020 07:34) at 23/11/2020 07:39) at 23/11/2020 07:40","mode_type":"none","service_class":{"id":2661,"name":"moscow delivery daas ondemand nf av op"},"status":"calculated","taxes":{"conditional_tax":{"applies_to":[],"disabled":false,"disabled_reason":null,"full_rate":0,"rate":0},"managed_with_tax":true,"sales_tax":{"applies_to":["driving","waiting","additional_fee","tolls","extras","stop_points","tips","cancellation","surge"],"disabled":true,"disabled_reason":"disabled for fleet","full_rate":20,"rate":0},"taxable_extras":[]}}},"scrum":"prod"}'), '$.pricing'),'$.supplier'),'$.service_class'),'$.id')

select substring('50004502067', 1,1);


-- while md not working


with  main as (

with all_orders AS (
SELECT fo.date_key AS dates,
       fo.hour_key,
       loc.city_name AS city,
       ct.lob_desc AS lob_desc,
       ct.class_type_desc AS class_type,
       fo.gt_order_gk AS order_gk,
       -- driver_gk = 200013 i a CC user, all his orders should be marked AS cancelled
       CASE when fo.driver_gk = 200013 THEN 4 ELSE order_status_key end AS order_status_key,
       order_cancellation_stage_key,
       fo.is_went_to_cc_key AS went_to_cc,
       (CASE when v.vendor_name like '%courier car%' THEN 'PHV'
            when v.vendor_name like '%courier pedestrian%' THEN 'pedestrian'
            when v.vendor_name like '%courier scooter%' THEN 'scooter'
            ELSE 'taxi'
       end) AS supply_type,
       (CASE when ct.class_family = 'Premium' THEN 'NF' ELSE 'OF' end) AS platform,
       fo.ordering_corporate_account_gk AS company_gk,
       ca.corporate_account_name AS company_name,
       am.name AS account_manager,
       del_ftp_date_key,
       (CASE when ct.class_type_desc like '%c2c%' THEN 3 ELSE
       (CASE when am.name like '%Delivery%' THEN 1 ELSE 2 end) end) AS Client_type_key,
 (CASE when ct.class_type_desc like '%c2c%' THEN 'C2C' ELSE
       (CASE when am.name like '%Delivery%' THEN 'eCommerce' ELSE 'Corporate' end) end) AS Client_type_desc,

    (case when jo.legacy_order_id is not null then total_customer_amount_exc_vat*1.2 else fo.customer_total_cost_inc_vat end) AS customer_total_cost_inc_vat,
    (case when jo.legacy_order_id is not null then total_customer_amount_exc_vat else fo.customer_total_cost end) AS customer_total_cost,

      fo.driver_total_cost_inc_vat AS driver_total_cost_inc_vat ,
      fo.driver_total_cost AS driver_total_cost ,
      fo.driver_total_commission_exc_vat AS driver_total_commission_exc_vat,
     (CASE
            WHEN lob_desc = 'Deliveries - B2B'
            THEN (case when jo.legacy_order_id is not null then total_customer_amount_exc_vat else fo.customer_total_cost end) - driver_total_cost_inc_vat
            ELSE (CASE
                      WHEN customer_total_cost_inc_vat - driver_total_cost_inc_vat >0
                      THEN round((customer_total_cost_inc_vat - driver_total_cost_inc_vat)/1.2,2)
                      ELSE customer_total_cost_inc_vat - driver_total_cost_inc_vat
                  END)
        END) AS buy_sell,
sum(CASE when ct.class_family IN ('Premium') and ct.class_type_desc not like '%ondemand% ' then jo.completed_deliveries
when ct.class_family IN ('Premium') and ct.class_type_desc like '%ondemand%' THEN jo.picked_up_deliveries ELSE 0 end) AS paid_deliveries_NF,
sum(CASE when ct.class_family IN ('Premium') THEN jo.completed_deliveries ELSE 0 end) AS completed_deliveries_NF,
sum(CASE when ct.class_family IN ('Premium') THEN jo.picked_up_deliveries ELSE 0 end) AS picked_up_deliveries_NF,
sum(CASE when ct.class_family IN ('Premium') THEN jo.gross_deliveries ELSE 0 end) AS gross_deliveries_NF

FROM "emilia_gettdwh"."dwh_fact_orders_v" fo
LEFT JOIN (
        SELECT
            j.legacy_order_id , np.total_customer_amount_exc_vat,
            count(CASE when d.status = 'completed' and j.supplier_id <> 13 THEN d.id end) AS completed_deliveries,
               count(d.id) AS gross_deliveries,
            count(CASE when d.status = 'completed' or
                            d.status = 'not_delivered'
                                and j.supplier_id <> 13 THEN d.id end) picked_up_deliveries


        FROM delivery."public".journeys AS j
        LEFT JOIN delivery."public".deliveries AS d ON d.journey_id = j.id
        left join (select journey_id, sum(amount) total_customer_amount_exc_vat
                  from "delivery-pricing".public.transactions
                    where side = 'customer'
                    and date(created_at) >= date'2021-06-27'
                    and env = 'RU'
                    group by 1
                ) np on np.journey_id = j.id

            WHERE 1=1 and (d.status <> 'return') and j.env='RU'
            and date(j.created_at) >= date'2021-06-27'
            GROUP BY 1,2
    ) AS jo ON jo.legacy_order_id= fo.sourceid

LEFT JOIN emilia_gettdwh.dwh_dim_class_types_v AS ct
  ON ct.class_type_key = fo.class_type_key
LEFT JOIN emilia_gettdwh.dwh_dim_corporate_accounts_v AS ca
  ON ca.corporate_account_gk = fo.ordering_corporate_account_gk
LEFT JOIN  emilia_gettdwh.dwh_dim_account_managers_v am ON am."account_manager_gk" = ca."account_manager_gk"
LEFT JOIN emilia_gettdwh.dwh_dim_locations_v AS loc
  ON loc.location_key = fo.origin_location_key
LEFT JOIN "emilia_gettdwh"."dwh_dim_drivers_v" d ON d.driver_gk = fo.driver_gk
LEFT JOIN emilia_gettdwh.dwh_dim_vendors_v AS v ON v.vendor_gk = d.fleet_gk
WHERE fo.country_key=2
  AND ct.lob_key IN (5,6)
  AND ct.class_group NOT LIKE 'Test'
  and ordering_corporate_account_gk not IN ( 20004730, 200017459, 20001999) --dummy delivery user and test company
  AND fo.date_key >= date'2021-06-27'
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
  )

(SELECT dates,
       tp.timecategory,
       tp.subperiod,
       tp.period,
       tp.subperiod2 AS time_period,
       city,
       all_orders.platform,
       lob_desc,
       class_type,
       client_type_key,
       client_type_desc,
       all_orders.company_gk,
       company_name,
       account_manager,
       del_ftp_date_key,
       supply_type,
       order_status_key,
       CASE when lob_desc = 'Deliveries - B2C' THEN 'C2C'
       when lob_desc = 'Deliveries - B2B' and name_internal is null THEN 'others' ELSE name_internal end AS company_name_united,
       CASE when lob_desc = 'Deliveries - B2C' THEN 'C2C'
       when lob_desc = 'Deliveries - B2B' and segment is null THEN 'other' ELSE segment end AS Segment,
       went_to_cc,
      sum(CASE when platform = 'OF'  and (order_status_key = 7 or (order_status_key=4 and "order_cancellation_stage_key" = 3)) THEN 1
         when platform = 'NF' THEN paid_deliveries_NF end) AS paid_deliveries,
       sum(CASE when platform = 'OF' and (order_status_key = 7 or (order_status_key=4 and "order_cancellation_stage_key" = 3)) THEN 1
         when platform = 'NF' THEN picked_up_deliveries_NF end) AS picked_up_deliveries,
           sum(CASE when platform = 'OF' THEN 1
         when platform = 'NF' THEN gross_deliveries_NF end) AS gross_deliveries,
       sum(customer_total_cost_inc_vat) AS customer_total_cost_inc_vat,
       sum(customer_total_cost) AS customer_total_cost,
       sum(driver_total_cost_inc_vat) AS driver_total_cost_inc_vat,
       sum(driver_total_cost) AS driver_total_cost,
       sum(buy_sell) AS buy_sell,
       sum(driver_total_commission_exc_vat)*(-1) AS driver_total_commission_exc_vat
       FROM all_orders
       LEFT JOIN sheets."default".delivery_corp_accounts_20191203 AS accounts ON cast(accounts.company_gk AS bigint)=all_orders.company_gk
       LEFT JOIN data_vis.periods_v AS tp ON tp.date_key = all_orders.dates and tp.hour_key = all_orders.hour_key
        WHERE timecategory IN ('3.Weeks')
       GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20

))

(select
       time_period, company_name,client_type_desc, city, platform,
sum(paid_deliveries) paid_deliveries,
       sum(gross_deliveries) gross_deliv,
   sum(buy_sell) buy_sell,
       sum(customer_total_cost) customer_cost,
       sum(driver_total_cost) driver_cost,
   sum(driver_total_commission_exc_vat) dr_com

   from main

group by 1,2,3,4,5)

--kate's version
select
       week(j.date_key) as week,
       l.city_name,
corporate_account_name,
--j.journey_id as journey_id,
--fo.sourceid as order_id,
sum(j."total_customer_amount_exc_vat") total_customer_amount_exc_vat,
sum(fo.driver_total_cost_inc_vat) driver_cost,
sum(j."total_customer_amount_exc_vat" - fo.driver_total_cost_inc_vat) as buy_sell,
sum(j."total_customer_amount_exc_vat" - fo.driver_total_cost_inc_vat
- driver_total_commission_exc_vat) as take_rate,
--j.courier_gk,
--fo.origin_full_address,
count(case when status = 'completed' then 1 end) as completed,
count(case when status = 'cancelled' then 1 end) as cancelled,
count(case when status = 'not_delivered' then 1 end) as not_delivered,
count(case when status = 'rejected' then 1 end) as rejected,
count(case when status = 'pending' then 1 end) as pending,
count(*) as gross_orders,
count( case when status in ('completed', 'not_delivered') then 1 end) as picked_up

from "delivery"."public"."deliveries" d
join "model_delivery"."dwh_fact_journeys_v" j on d.journey_id = j.journey_id
and d.env = 'RU' and j.date_key between date '2021-06-27' and date '2021-07-11'
left join emilia_gettdwh.dwh_fact_orders_v fo on j.order_gk = fo.order_gk
                                                     and fo.date_key >= date'2021-06-27'
                                                     and fo.country_key = 2 and lob_key in (5,6)

    left join emilia_gettdwh.dwh_dim_corporate_accounts_v AS ca on cast(company_id as int) = ca.source_id and ca.country_key = 2 and env = 'RU'
left join emilia_gettdwh.dwh_dim_locations_v l on fo.origin_location_key = l.location_key

where 1 = 1
--and ca.corporate_account_name = 'ООО «ФЛАУВАУ»'
group by 1,2,3;


select
week(date_key) week, corporate_account_name, city_name,
       date_key,
       sum(take_rate) tr,
       sum(total_customer_amount_exc_vat) gmv,
       sum(completed) compl,
       sum(cancelled) cancelled,
       sum(picked_up) paid_deliv,
       sum(gross_orders) gross
from (
         select j.date_key                                                                                         as date_key,
                corporate_account_name,
                j.journey_id                                                                                       as journey_id,
                fo.sourceid                                                                                        as order_id,
                j."total_customer_amount_exc_vat",
                fo.driver_total_cost_inc_vat,
                j."total_customer_amount_exc_vat" - fo.driver_total_cost_inc_vat                                   as buy_sell,
                j."total_customer_amount_exc_vat" - fo.driver_total_cost_inc_vat -
                driver_total_commission_exc_vat                                                                    as take_rate,
                j.courier_gk,
                l.city_name,
                fo.origin_full_address,
                count(case when status = 'completed' then 1 end)                                                   as completed,
                count(case when status = 'cancelled' then 1 end)                                                   as cancelled,
                count(case when status = 'not_delivered' then 1 end)                                               as not_delivered,
                count(case when status = 'rejected' then 1 end)                                                    as rejected,
                count(case when status = 'pending' then 1 end)                                                     as pending,
                count(*)                                                                                           as gross_orders,
                count(case when status in ('completed', 'not_delivered') then 1 end)                               as picked_up
         from "delivery"."public"."deliveries" d
                  join "model_delivery"."dwh_fact_journeys_v" j on d.journey_id = j.journey_id
             and d.env = 'RU' and j.date_key between date '2021-06-28' and date '2021-07-11'
                  left join emilia_gettdwh.dwh_fact_orders_v fo on j.order_gk = fo.order_gk
                  left join emilia_gettdwh.dwh_dim_corporate_accounts_v AS ca
                            on cast(company_id as int) = ca.source_id and ca.country_key = 2 and env = 'RU'
                  left join emilia_gettdwh.dwh_dim_locations_v l on fo.origin_location_key = l.location_key
         where 1 = 1
           --and ca.corporate_account_name = 'ООО «ФЛАУВАУ»'
         group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
     )
group by 1,2,3,4